const { PARTNERS } = require('../config/partners');

function createTypeSelectionKeyboard(isAdmin = false, username = '') {
    console.log('\n=== –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ===');
    console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', username);
    console.log('Is Admin:', isAdmin);

    const keyboard = {
        inline_keyboard: [
            [{ text: "–ü–æ–ø–æ–ª–Ω—è–µ–º—ã–µ –∫–∞—Ä—Ç—ã", callback_data: "type_popolnyaemye" }],
            [{ text: "–ü—Ä–µ–¥–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã", callback_data: "type_ne_popolnyaemye" }],
            [{ text: "–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", callback_data: "contact_manager" }]
        ]
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Ö, —É –∫–æ–≥–æ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø
    const userRefs = PARTNERS[username] || [];
    console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏:', userRefs);

    if (isAdmin || userRefs.length > 0) {
        keyboard.inline_keyboard.push([{ text: "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data: "show_stats" }]);
    }

    console.log('–°–æ–∑–¥–∞–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞:', keyboard);
    console.log('====================\n');
    return { reply_markup: keyboard };
}

function createBackButtonKeyboard() {
    return {
        reply_markup: {
            inline_keyboard: [
                [{ text: "–ù–∞–∑–∞–¥", callback_data: "back_to_menu" }]
            ]
        }
    };
}

function createBackAndContactKeyboard() {
    return {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: "–ù–∞–∑–∞–¥", callback_data: "back_to_menu" },
                    { text: "–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", callback_data: "contact_manager" }
                ]
            ]
        }
    };
}

module.exports = {
    createTypeSelectionKeyboard,
    createBackAndContactKeyboard,
    createBackButtonKeyboard
}; 