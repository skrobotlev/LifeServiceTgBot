const lasoBrowserService = require('../services/lasoBrowserService');
const referralService = require('../services/referralService');
const { privetstvie } = require('../texts');
const { PARTNERS, ADMIN_ID } = require('../config/partners');
const { handleReferral } = require('../services/referralService');
const { createTypeSelectionKeyboard } = require('../utils/keyboardUtils');
const { getReferralStats } = require('../utils/statsUtils');

function formatTransactions(transactions) {
    if (!transactions || transactions.length === 0) return '–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø—É—Å—Ç–∞';

    return transactions.map(t =>
        `üìÖ ${t.date}\nüí¨ ${t.description}\n${t.status ? `‚úÖ ${t.status}\n` : ''}üí∞ ${t.amount}`
    ).join('\n\n');
}

async function handleMessage(msg, bot) {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const username = msg.from.username;
    const text = msg.text;
    const isAdmin = userId === ADMIN_ID;

    console.log('\n=== –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è ===');
    console.log('Chat ID:', chatId);
    console.log('User ID:', userId);
    console.log('Username:', username);
    console.log('Text:', text);
    console.log('====================\n');

    try {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /contact
        if (text === '/contact' || text === '/contact@your_bot_username') {
            console.log("–ö–æ–º–∞–Ω–¥–∞: –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º");
            const userInfo = `${msg.from.first_name || ""} ${msg.from.last_name || ""} (@${msg.from.username || "–Ω–µ —É–∫–∞–∑–∞–Ω"})`;
            const info = `–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º:
ChatID: ${chatId}
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: ${userInfo}`;
            console.log("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä—É:", info);
            await bot.telegram.sendMessage(ADMIN_ID, info);
            await bot.telegram.sendMessage(
                chatId,
                "–°–ø–∞—Å–∏–±–æ, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
                createTypeSelectionKeyboard(isAdmin, username)
            );
            return;
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /stats
        if (text === '/stats' || text === '/stats@your_bot_username') {
            console.log("–ö–æ–º–∞–Ω–¥–∞: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞");
            const stats = await getReferralStats(username);
            await bot.telegram.sendMessage(chatId, stats, { parse_mode: 'Markdown' });
            return;
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã /start
        if (text && text.startsWith('/start')) {
            console.log("–ö–æ–º–∞–Ω–¥–∞: –°—Ç–∞—Ä—Ç");
            if (text !== '/start' && text !== '/start@your_bot_username') {
                const referralCode = text.split(' ')[1];
                console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥:', referralCode);
                await handleReferral(userId, username, referralCode);
            }

            // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            const keyboard = createTypeSelectionKeyboard(isAdmin, username);
            console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π:', keyboard);

            // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            await bot.telegram.sendMessage(
                chatId,
                privetstvie,
                keyboard
            );
            return;
        }

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        await bot.telegram.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
}

module.exports = handleMessage; 